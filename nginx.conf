events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/javascript
        application/xml+rss
        application/json;

    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # Handle preflight OPTIONS requests
        location ~ ^/(.*) {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"nginx-file-server","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Serve static files from /data directory
        location /data/ {
            alias /usr/share/nginx/html/data/;
            
            # Enable directory listing
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            autoindex_format json;

            # Cache static files
            expires 1h;
            add_header Cache-Control "public, immutable";
            
            # Try to serve request as file, then as directory
            try_files $uri $uri/ =404;
        }

        # Serve static files from /static directory
        location /static/ {
            alias /usr/share/nginx/html/static/;
            
            # Enable directory listing
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            
            # Cache static files longer
            expires 1d;
            add_header Cache-Control "public, immutable";
            
            try_files $uri $uri/ =404;
        }

        # API documentation endpoint
        location /api/docs {
            return 200 '{
                "name": "MCP Development File Server",
                "version": "1.0.0",
                "endpoints": {
                    "GET /health": "Health check endpoint",
                    "GET /data/": "Browse data directory files",
                    "GET /static/": "Browse static files",
                    "GET /api/docs": "This documentation"
                },
                "cors": "Enabled for all origins",
                "features": ["directory_listing", "gzip_compression", "caching"]
            }';
            add_header Content-Type application/json;
        }

        # Root location
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            
            # Return a simple welcome page if no file is found
            try_files $uri $uri/ @welcome;
        }

        # Welcome page for root
        location @welcome {
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>MCP Development File Server</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; border-bottom: 2px solid #007acc; padding-bottom: 10px; }
        .endpoint { background: #f8f9fa; padding: 10px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #007acc; }
        .method { font-weight: bold; color: #007acc; }
        ul { margin: 20px 0; }
        li { margin: 5px 0; }
        a { color: #007acc; text-decoration: none; }
        a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸš€ MCP Development File Server</h1>
        <p>Welcome to the MCP Development Environment file server. This service provides CORS-enabled access to your development files.</p>
        
        <h2>Available Endpoints:</h2>
        <div class="endpoint">
            <div><span class="method">GET</span> <a href="/health">/health</a></div>
            <div>Health check endpoint</div>
        </div>
        
        <div class="endpoint">
            <div><span class="method">GET</span> <a href="/data/">/data/</a></div>
            <div>Browse and download data directory files</div>
        </div>
        
        <div class="endpoint">
            <div><span class="method">GET</span> <a href="/static/">/static/</a></div>
            <div>Browse and download static files</div>
        </div>
        
        <div class="endpoint">
            <div><span class="method">GET</span> <a href="/api/docs">/api/docs</a></div>
            <div>API documentation (JSON format)</div>
        </div>

        <h2>Features:</h2>
        <ul>
            <li>âœ… CORS enabled for cross-origin requests</li>
            <li>âœ… Directory browsing with JSON output</li>
            <li>âœ… Gzip compression</li>
            <li>âœ… File caching headers</li>
            <li>âœ… Security headers</li>
            <li>âœ… Health monitoring</li>
        </ul>

        <p><strong>Server Time:</strong> $time_iso8601</p>
        <p><strong>Docker Service:</strong> nginx (MCP Development Environment)</p>
    </div>
</body>
</html>';
            add_header Content-Type "text/html; charset=utf-8";
        }

        # Security: Block access to hidden files
        location ~ /\. {
            deny all;
        }

        # Optimize file serving
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        client_max_body_size 100M;
    }
}